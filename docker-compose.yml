x-common-keys: &common-keys
  restart: unless-stopped
  networks:
    - monitoring-services
    - traefik-proxy-network
  deploy:
    resources:
      limits:
        cpus: '0.25'
        memory: 200M

x-environment: &default-tz-puid-pgid
  TZ: $TZ
  PUID: $PUID
  PGID: $PGID

services:
  grafana:
    image: grafana/grafana-oss:9.3.6
    <<: *common-keys
    deploy:
      resources:
        limits:
          cpus: '0.45'
          memory: 200M
    volumes:
      - ./appdata/grafana/dashboards:/etc/grafana/provisioning/dashboards/configs
      - ./appdata/grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/dashboard.yaml
      - ./appdata/grafana/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${MONITORING_GRAFANA_PASSWORD}
      - GF_SERVER_HTTP_PORT=${MONITORING_GRAFANA_PORT-33000}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`${MONITORING_GRAFANA_DOMAIN}`)"
      - "traefik.http.routers.grafana.entrypoints=https"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.services.grafana.loadbalancer.server.port=33000"

  prometheus:
    image: prom/prometheus:v2.54.0
    <<: *common-keys
    deploy:
      resources:
        limits:
          cpus: '0.45'
          memory: 300M
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      <<: *default-tz-puid-pgid
    volumes:
      - ./appdata/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml
      - ./appdata/prometheus/scrape-configs/:/etc/prometheus/scrape-configs/
      - ./appdata/prometheus/alert.rules.yaml:/etc/prometheus/alert.rules.yaml
      - prometheus_data:/prometheus/data #chown 65534:65534
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`${MONITORING_PROMETHEUS_DOMAIN}`)"
      - "traefik.http.routers.prometheus.entrypoints=https"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"

  alertmanager:
    image: prom/alertmanager:v0.26.0
    <<: *common-keys
    volumes:
      - ./appdata/alertmanager/config.yml:/etc/alertmanager/config.yml
      - ${MONITORING_STACK_TELEGRAM_BOT_TOKENFILE_LOCATION}:/config/.alert-manager-telegram-bot-token-file
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--log.level=debug'
      - '--storage.path=/alertmanager'
  blackbox:
    image: prom/blackbox-exporter:v0.23.0
    <<: *common-keys
    command:
      - --config.file=/etc/blackbox/blackbox.yml
    volumes:
      - ./appdata/blackbox/blackbox.yml:/etc/blackbox/blackbox.yml

  loki:
    image: grafana/loki:latest
    <<: *common-keys
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:latest
    <<: *common-keys
    volumes:
      - ./appdata/promtail/logs:/var/log
      - ./appdata/promtail/config.yaml:/etc/promtail/docker-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/docker-config.yaml
    depends_on:
      - loki

  graphiteexporter:
    image: prom/graphite-exporter:latest
    <<: *common-keys
    volumes:
      - ./appdata/graphitexporter/config.yml:/app/config/config.yml

  mikrotikexporter:
    image: ghcr.io/akpw/mktxp:latest
    <<: *common-keys
    environment:
      <<: *default-tz-puid-pgid
    volumes:
      - ./appdata/mikrotikexporter:/home/mktxp/mktxp:rw
    user: root

networks:
  monitoring-services:
  traefik-proxy-network:
    external: true

volumes:
  prometheus_data:
